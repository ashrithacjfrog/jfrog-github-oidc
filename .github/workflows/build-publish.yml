name: "JFrog  NPM Integration Example"
on: push

# This is required as per
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-cloud-providers#adding-permissions-settings
permissions:
  id-token: write
  contents: read

jobs:
  build:
     runs-on: ubuntu-latest
     env:
      OIDC_AUDIENCE: 'jfrog-github'
     defaults:
      run:
        working-directory: ./package
     steps:
       - name: Checkout
         uses: actions/checkout@v3
              
       - name: Install OIDC Client from Core Package
         run: npm install @actions/core @actions/http-client
        
       - name: Get ID Token (@actions/core method)
         uses: actions/github-script@v7
         id: idtoken
         with:
          script: |
            const coredemo = require('@actions/core');
            let id_token = await coredemo.getIDToken(process.env.OIDC_AUDIENCE);
            coredemo.setOutput('id_token', id_token);

       - name: Fetch Access Token from Artifactory
         id: fetch_access_token
         env:
          ID_TOKEN: ${{ steps.idtoken.outputs.id_token }}
         run: |
          ACCESS_TOKEN=$(curl \
          -X POST \
          -H "Content-type: application/json" \
          https://devreleplus.jfrog.io/access/api/v1/oidc/token \
          -d \
          "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"$ID_TOKEN\", \"provider_name\": \"github\"}" | jq .access_token | tr -d '"' )
          echo ACCESS_TOKEN=$ACCESS_TOKEN >> $GITHUB_OUTPUT
          echo "Token is $ACCESS_TOKEN"
          
       - name: Setup JFrog CLI
         uses: jfrog/setup-jfrog-cli@v3
         env:  
           JF_URL: ${{ secrets.JF_URL }}
           JF_ACCESS_TOKEN: ${{ steps.fetch_access_token.outputs.ACCESS_TOKEN }}
           
       - name: Set CLI Config
         run: jf npm-config --global=true --repo-resolve=eks-npm --repo-deploy=eks-npm
           
       - name: Install Dependanices
         run: jf npm install
           
       - name: Run tests
         run: npm test
         
       - name: Publish
         run: jf npm publish
         
       - name: Publish Build info With JFrog CLI
         run: |
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
